import { describe, test, expect } from '@jest/globals'
import { solution } from './solution'
import { solution2 } from './solution2'
import { solution3 } from './solution3'
describe('두니발 박사의 탈옥 (문제 ID: NUMB3RS, 난이도: 중) - 완전 탐색 알고리즘', () => {
  test(`input
        5 2 0
        0 1 1 1 0
        1 0 0 0 1
        1 0 0 0 0
        1 0 0 0 0
        0 1 0 0 0
        3
        0 2 4
      output
        0.83333333 0.0000000 0.16666667
  `, () => {
    expect(solution([5, 2, 0], [
      [0, 1, 1, 1, 0],
      [1, 0, 0, 0, 1],
      [1, 0, 0, 0, 0],
      [1, 0, 0, 0, 0],
      [0, 1, 0, 0, 0]
    ], 3, [0, 2, 4])).toBe('0.83333333 0.0000000 0.16666667')
  })
  test(`input
        8 2 3
        0 1 1 1 0 0 0 0
        1 0 0 1 0 0 0 0
        1 0 0 1 0 0 0 0
        1 1 1 0 1 1 0 0
        0 0 0 1 0 0 0 1
        0 0 0 1 0 0 0 1
        0 0 0 0 1 0 0 0 
        0 0 0 0 1 1 0 0 
        4
        3 1 2 6
      output
        0.066666667 0.066666667 0.066666667
  `, () => {
    expect(solution([8, 2, 3], [
      [0, 1, 1, 1, 0, 0, 0, 0],
      [1, 0, 0, 1, 0, 0, 0, 0],
      [1, 0, 0, 1, 0, 0, 0, 0],
      [1, 1, 1, 0, 1, 1, 0, 0],
      [0, 0, 0, 1, 0, 0, 1, 1],
      [0, 0, 0, 1, 0, 0, 0, 1],
      [0, 0, 0, 0, 1, 0, 0, 0], 
      [0, 0, 0, 0, 1, 1, 0, 0], 
    ], 4, [3, 1, 2, 6])).toBe('0.43333333 0.066666667 0.066666667 0.066666667')
  })
})

describe('두니발 박사의 탈옥 (문제 ID: NUMB3RS, 난이도: 중) - 동적 계획법 알고리즘', () => {
  test(`input
        5 2 0
        0 1 1 1 0
        1 0 0 0 1
        1 0 0 0 0
        1 0 0 0 0
        0 1 0 0 0
        3
        0 2 4
      output
        0.83333333 0.0000000 0.16666667
  `, () => {
    expect(solution2([5, 2, 0], [
      [0, 1, 1, 1, 0],
      [1, 0, 0, 0, 1],
      [1, 0, 0, 0, 0],
      [1, 0, 0, 0, 0],
      [0, 1, 0, 0, 0]
    ], 3, [0, 2, 4])).toBe('0.83333333 0.0000000 0.16666667')
  })
  test(`input
        8 2 3
        0 1 1 1 0 0 0 0
        1 0 0 1 0 0 0 0
        1 0 0 1 0 0 0 0
        1 1 1 0 1 1 0 0
        0 0 0 1 0 0 0 1
        0 0 0 1 0 0 0 1
        0 0 0 0 1 0 0 0 
        0 0 0 0 1 1 0 0 
        4
        3 1 2 6
      output
        0.066666667 0.066666667 0.066666667
  `, () => {
    expect(solution2([8, 2, 3], [
      [0, 1, 1, 1, 0, 0, 0, 0],
      [1, 0, 0, 1, 0, 0, 0, 0],
      [1, 0, 0, 1, 0, 0, 0, 0],
      [1, 1, 1, 0, 1, 1, 0, 0],
      [0, 0, 0, 1, 0, 0, 1, 1],
      [0, 0, 0, 1, 0, 0, 0, 1],
      [0, 0, 0, 0, 1, 0, 0, 0],
      [0, 0, 0, 0, 1, 1, 0, 0],
    ], 4, [3, 1, 2, 6])).toBe('0.43333333 0.066666667 0.066666667 0.066666667')
  })
})

describe('두니발 박사의 탈옥 (문제 ID: NUMB3RS, 난이도: 중) - 동적 계획법 알고리즘2, 반대 방향에서 풀기', () => {
  test(`input
        5 2 0
        0 1 1 1 0
        1 0 0 0 1
        1 0 0 0 0
        1 0 0 0 0
        0 1 0 0 0
        3
        0 2 4
      output
        0.83333333 0.0000000 0.16666667
  `, () => {
    expect(solution3([5, 2, 0], [
      [0, 1, 1, 1, 0],
      [1, 0, 0, 0, 1],
      [1, 0, 0, 0, 0],
      [1, 0, 0, 0, 0],
      [0, 1, 0, 0, 0]
    ], 3, [0, 2, 4])).toBe('0.83333333 0.0000000 0.16666667')
  })
  test(`input
        8 2 3
        0 1 1 1 0 0 0 0
        1 0 0 1 0 0 0 0
        1 0 0 1 0 0 0 0
        1 1 1 0 1 1 0 0
        0 0 0 1 0 0 0 1
        0 0 0 1 0 0 0 1
        0 0 0 0 1 0 0 0 
        0 0 0 0 1 1 0 0 
        4
        3 1 2 6
      output
        0.066666667 0.066666667 0.066666667
  `, () => {
    expect(solution3([8, 2, 3], [
      [0, 1, 1, 1, 0, 0, 0, 0],
      [1, 0, 0, 1, 0, 0, 0, 0],
      [1, 0, 0, 1, 0, 0, 0, 0],
      [1, 1, 1, 0, 1, 1, 0, 0],
      [0, 0, 0, 1, 0, 0, 1, 1],
      [0, 0, 0, 1, 0, 0, 0, 1],
      [0, 0, 0, 0, 1, 0, 0, 0],
      [0, 0, 0, 0, 1, 1, 0, 0],
    ], 4, [3, 1, 2, 6])).toBe('0.43333333 0.066666667 0.066666667 0.066666667')
  })
})